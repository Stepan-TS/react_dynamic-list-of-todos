{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","helpers/index.tsx","index.tsx"],"names":["TodoList","props","todos","selectedTodoId","setSelectedTodoId","className","map","id","title","completed","classNames","type","onClick","TodoFilter","changeSortBy","query","changeQuery","onChange","event","target","value","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","closeModal","todo","useState","user","setUsers","loading","setLoading","useEffect","userId","finally","href","email","name","App","setTodos","showTodoModal","setShowTodoModal","sortBy","setSortBy","setQuery","visiableTodos","filter","filterByTodoStatus","toLocaleUpperCase","includes","filterByTitle","selectedTodo","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.43fba800.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\nimport './TodoList.scss';\n\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodoId: number,\n  setSelectedTodoId: (todoId: number) => void;\n};\n\nexport const TodoList: React.FC<Props> = props => {\n  const {\n    todos,\n    selectedTodoId,\n    setSelectedTodoId,\n  } = props;\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n      {todos.map(({ id, title, completed }) => (\n        <tbody key={id}>\n          <tr data-cy=\"todo\" className=\"todo\">\n            <td className=\"is-vcentered\">{id}</td>\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames(\n                {\n                  'has-text-danger': !completed,\n                  'has-text-success': completed,\n                },\n              )}\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  return selectedTodoId === id\n                    ? setSelectedTodoId(0)\n                    : setSelectedTodoId(id);\n                }}\n              >\n                <span className=\"icon\">\n                  <i className={classNames(\n                    'far',\n                    {\n                      'fa-eye': selectedTodoId !== id,\n                      'fa-eye-slash': selectedTodoId === id,\n                    },\n                  )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      ))}\n    </table>\n  );\n};\n","import { Dispatch, SetStateAction } from 'react';\n\ntype Props = {\n  changeSortBy: Dispatch<SetStateAction<string>>;\n  query: string;\n  changeQuery: Dispatch<SetStateAction<string>>;\n};\n\nexport const TodoFilter: React.FC<Props> = (props) => {\n  const {\n    changeSortBy,\n    query,\n    changeQuery,\n  } = props;\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            onChange={(event) => changeSortBy(event.target.value)}\n            data-cy=\"statusSelect\"\n          >\n            <option value=\"all\">All</option>\n            <option\n              value=\"active\"\n            >\n              Active\n            </option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => changeQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => changeQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  closeModal: () => void;\n  todo?: Todo;\n};\n\nexport const TodoModal: React.FC<Props> = (props) => {\n  const { closeModal, todo } = props;\n\n  const [user, setUsers] = useState<User>();\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    if (todo?.userId) {\n      getUser(todo?.userId)\n        .then(setUsers)\n        .finally(() => setLoading(false));\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading\n        ? (<Loader />)\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${todo?.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={closeModal}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {todo?.title}\n              </p>\n\n              {user && (\n                <p className=\"block\" data-cy=\"modal-user\">\n                  {todo?.completed\n                    ? (<strong className=\"has-text-success\">Done</strong>)\n                    : (<strong className=\"has-text-danger\">Planned</strong>)}\n\n                  {' by '}\n\n                  <a href={`mailto:${user?.email}`}>\n                    {user?.name}\n                  </a>\n                </p>\n              )}\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { TodoModal } from './components/TodoModal';\nimport { filterByTitle, filterByTodoStatus } from './helpers';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [showTodoModal, setShowTodoModal] = useState(false);\n  const [selectedTodoId, setSelectedTodoId] = useState(0);\n  const [sortBy, setSortBy] = useState('all');\n  const [query, setQuery] = useState('');\n\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    getTodos()\n      .then(setTodos)\n      .finally(() => setLoading(false));\n  }, []);\n\n  let visiableTodos = filterByTodoStatus(todos, sortBy);\n\n  visiableTodos = filterByTitle(visiableTodos, query);\n\n  const selectedTodo = todos.find(todo => todo.id === selectedTodoId);\n\n  useEffect(() => {\n    if (selectedTodoId) {\n      setShowTodoModal(true);\n    }\n  }, [selectedTodoId]);\n\n  const closeTodoModal = () => {\n    setSelectedTodoId(0);\n    setShowTodoModal(false);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                changeSortBy={setSortBy}\n                query={query}\n                changeQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading\n                ? (<Loader />)\n                : (\n                  <TodoList\n                    todos={visiableTodos}\n                    selectedTodoId={selectedTodoId}\n                    setSelectedTodoId={setSelectedTodoId}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {showTodoModal\n        && (\n          <TodoModal\n            closeModal={closeTodoModal}\n            todo={selectedTodo}\n          />\n        )}\n    </>\n  );\n};\n","import { Todo } from '../types/Todo';\n\nexport function filterByTitle(todos: Todo[], title: string) {\n  return todos.filter(todo => todo.title.toLocaleUpperCase()\n    .includes(title.toLocaleUpperCase()));\n}\n\nexport function filterByTodoStatus(todos: Todo[], sortBy: string) {\n  return todos.filter(todo => {\n    switch (sortBy) {\n      case 'active':\n        return !todo.completed;\n      case 'completed':\n        return todo.completed;\n      default:\n        return 'all';\n    }\n  });\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}